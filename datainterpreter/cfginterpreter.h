#ifndef CFGINTERPRETER_H
#define CFGINTERPRETER_H

#include "interpreter.h"
#include <QVector>

enum class BlockType
{
    undef,
    bis,
    bgs,
    bcvm
};

static QString const& file_header =                 "/*WARNING !!! -> THIS FILE IS GENERATED AUTOMATICALLY. DO NOT EDIT THIS FILE MANUALLY <- WARNING !!!*/\r\n\r\n \
                                                    typedef struct{\r\n                                                                                             \
                                                    unsigned short GA;\r\n                                                                                          \
                                                    unsigned short LA;\r\n                                                                                          \
                                                    unsigned long kernel_addr_rom;\r\n                                                                              \
                                                    unsigned long kernel_addr_ram;\r\n                                                                              \
                                                    unsigned long kernel_size;\r\n                                                                                  \
                                                    unsigned long config_addr_rom;\r\n                                                                              \
                                                    unsigned long config_addr_ram;\r\n                                                                              \
                                                    unsigned long config_size;\r\n                                                                                  \
                                                    unsigned long part1_addr_rom;\r\n                                                                               \
                                                    unsigned long part1_addr_ram;\r\n                                                                               \
                                                    unsigned long part1_size;\r\n                                                                                   \
                                                    unsigned long part2_addr_rom;\r\n                                                                               \
                                                    unsigned long part2_addr_ram;\r\n                                                                               \
                                                    unsigned long part2_size;\r\n                                                                                   \
                                                    unsigned long part3_addr_rom;\r\n                                                                               \
                                                    unsigned long part3_addr_ram;\r\n                                                                               \
                                                    unsigned long part3_size;\r\n                                                                                   \
                                                    }SoftLoad;\r\n\r\n\r\n                                                                                                  \
                                                    const SoftLoad conf_info[]  =\r\n                                                                                       \
                                                    {\r\n                                                                                                                   \
                                                    /*   module    --------  kernel --------------- ---------- config -------------- ------------ app 1 ------------- ------------ app 2 ------------- ------------ app 3 ------------- */\r\n";


struct SoftLoad
{
    unsigned short GA;
    unsigned short LA;
    unsigned long kernel_addr_rom;
    unsigned long kernel_addr_ram;
    unsigned long kernel_size;
    unsigned long config_addr_rom;
    unsigned long config_addr_ram;
    unsigned long config_size;
    unsigned long part1_addr_rom;
    unsigned long part1_addr_ram;
    unsigned long part1_size;
    unsigned long part2_addr_rom;
    unsigned long part2_addr_ram;
    unsigned long part2_size;
    unsigned long part3_addr_rom;
    unsigned long part3_addr_ram;
    unsigned long part3_size;
};

class BlockCfgInterpreter
{
public:
    BlockCfgInterpreter() = default;
    ~BlockCfgInterpreter() = default;
    virtual QString dataStr(const size_t& GA, const size_t& flash_addr, const size_t& part_addr, bool is_part) = 0;
protected:
    QList<QStringList> list;
};

class CfgDataInterpreter : public FileDataInterpreter
{
public:
    CfgDataInterpreter() = default;
    CfgDataInterpreter(const BlockType& block = BlockType::undef);
    ~CfgDataInterpreter() = default;
    virtual void write(const DataStorage& storage = DataStorage()) override;
    void setBlockType(const BlockType& = BlockType::undef);
protected:
    size_t flash_offset;
};

#endif
